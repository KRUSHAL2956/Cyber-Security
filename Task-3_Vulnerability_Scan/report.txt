TASK 3: BASIC VULNERABILITY SCAN
Student: KRUSHAL
Date: October 24, 2025

================================================================================

STEP 1: INSTALLING OPENVAS

I installed OpenVAS using Docker on my Ubuntu 24.04 system.

Commands used:
   sudo apt install docker.io docker-compose-v2
   git clone https://github.com/greenbone/greenbone-community-container.git
   cd greenbone-community-container
   sudo docker compose up -d

Set admin password:
   sudo docker compose exec -u gvmd gvmd gvmd --user=admin --new-password=Admin@*****

Access: http://localhost:9392
Login: admin / *****

================================================================================

STEP 2: FEED SYNCHRONIZATION

After installation, waited for vulnerability feeds to update.

Checked: Administration → Feed Status
All feeds showed "Current" status:
- NVT Feed: 20251023T0704
- SCAP Feed: 20251024T0507
- CERT Feed: 20251024T0410
- GVMD_DATA: 20251024T0506

================================================================================

STEP 3: CREATING SCAN TARGET

Found my system IP: hostname -I → 10.63.**.***

Created target in OpenVAS:
- Configuration → Targets → New Target
- Name: My Ubuntu System
- Host: 10.63.**.***
- Port List: All IANA assigned TCP

Note: 127.0.0.1 didn't work (Docker networking issue), used actual IP instead.

================================================================================

STEP 4: CREATING SCAN TASK

Created scan task:
- Scans → Tasks → Task Wizard
- Name: My Machine Vulnerability Scan
- Target: My Ubuntu System
- Scan Config: Full and Fast

Task ID: ********-****-****-****-************

================================================================================

STEP 5: RUNNING THE SCAN

Clicked the green Play button to start the scan.

Scan details:
- Status: Done
- Total results: 19

================================================================================

STEP 6: VIEWING RESULTS

Initial view showed only 2 results (Low severity).

Filter issue: Default filter was "levels=hmlgd" which hides Log entries.
Changed to "levels=hmlgdf" to see all 19 results.

Results breakdown:
  High:     0
  Medium:   0
  Low:      2
  Log:      17

Key findings:
- OS detected: Ubuntu 24.04
- Service: Apache HTTP Server 2.4.58 on port 80
- Only 1 open port found

================================================================================

STEP 7: DOWNLOADING REPORTS

Downloaded scan results:
- TXT format: report-cffadc6b-2df2-4c7d-9e1d-be9ccd0c6b38.txt
- XML files: host details, CVE data, CPE data, task config

All saved to scan_data folder.

================================================================================

STEP 8: SCAN RESULTS

System Information:
- IP: 10.63.**.***
- OS: Ubuntu Linux 24.04
- Architecture: x64

Port Scan:
- Total ports scanned: 65,535
- Open ports: 1 (Port 80 - Apache 2.4.58)
- Closed: 65,534
- Filtered: 0

Good security: MySQL, MongoDB, and other services bound to localhost only.

================================================================================

STEP 9: VULNERABILITIES FOUND

VULNERABILITY 1: TCP Timestamps
--------------------------------
Severity: Low (CVSS 2.6)
CVE: None

Issue: TCP timestamps enabled, reveals system uptime (~47 days).
Risk: Information disclosure - attackers can figure out patch schedule.

Technical Details:
- RFC 1323/7323 implementation detected
- Timestamp values observed in TCP packets
- System uptime can be calculated from timestamp drift


VULNERABILITY 2: ICMP Timestamps
---------------------------------
Severity: Low (CVSS 2.1)
CVE: CVE-1999-0524

Issue: System responds to ICMP timestamp requests.
Risk: Reveals timing information.

Technical Details:
- ICMP Type 13 (Timestamp Request) receives response
- ICMP Type 14 (Timestamp Reply) is enabled
- Default Ubuntu ICMP configuration

================================================================================

STEP 10: APACHE SECURITY CONCERN

Apache 2.4.58 has 20 known CVEs:

Critical (4 CVEs):
- CVE-2024-38476 (9.8) - Code execution
- CVE-2024-38474 (9.8) - Remote code execution
- CVE-2025-23048 (9.1) - Request smuggling
- CVE-2024-38475 (9.1) - Server compromise

High Severity (14 CVEs): Various vulnerabilities
Medium Severity (2 CVEs): Information disclosure

Current version: 2.4.58
Latest version: 2.4.62
Status: 4 versions behind

Analysis Note: Quick scan doesn't test for all CVEs, only checks for actively
exploitable conditions. These vulnerabilities exist in the code but may require
specific conditions to be exploited.

================================================================================

STEP 11: RISK ASSESSMENT

Overall Risk: LOW to MEDIUM

Active findings:
- 2 low-severity vulnerabilities (timestamps)
- No critical/high severity actively exploited

Potential risk:
- Apache has 4 critical CVEs
- Could lead to server compromise if exploited

Analysis conclusion: System has good baseline security with minimal active
vulnerabilities, but outdated Apache version presents potential security concerns.

================================================================================

STEP 12: SECURITY ANALYSIS SUMMARY

Key Observations:

Strengths Identified:
- Only 1 port exposed to network
- Services properly bound to localhost
- No critical vulnerabilities actively detected
- Firewall configuration appears effective

Areas of Concern:
- TCP timestamps reveal system uptime information
- ICMP timestamps enabled (CVE-1999-0524)
- Apache 2.4.58 has 20 known CVEs in database
- 4 critical CVEs exist for current Apache version

Risk Level Analysis:
- Current exploitable risk: Low
- Potential risk if vulnerabilities exploited: High
- Information disclosure impact: Low to Medium

================================================================================

CONCLUSION

Successfully completed vulnerability scan and analysis using OpenVAS.

Summary:
- Found 2 low-severity vulnerabilities
- Identified 20 Apache CVEs (documented for awareness)
- Only 1 port exposed (good security practice)
- System baseline security is good

Key learnings:
- How to use OpenVAS for vulnerability scanning
- Understanding CVSS scores and CVE numbers
- Risk assessment and prioritization
- Security analysis methodology

Analysis findings:
- System demonstrates good security practices
- Limited attack surface with minimal open ports
- Proper service isolation observed
- Vulnerability database indicates potential Apache concerns

Overall assessment: The system has a solid security posture with good firewall
configuration and service isolation. The scan identified minor information
disclosure issues and documented Apache CVE references for awareness.
